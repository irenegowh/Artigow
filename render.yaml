services:
  - name: artigow-main
    type: web
    env: production
    buildCommand: pipenv install --deploy
    startCommand: sh -c "/wait-for-db.sh && flask db upgrade || echo 'No migrations to apply' && python /app/init_admin.py && python -m app.run"
    plan: free # Cambia a "starter", "standard", etc. según el tipo de instancia que desees
    region: frankfurt
    envVars:
      - key: SECRET_KEY
        value: your-secret-key
      - key: DATABASE_URL
        value: postgresql://user:password@db_service:5432/artigow_db
      - key: UPLOAD_FOLDER
        value: /path/to/upload/folder
      - key: LOGS_SERVICE_URL
        value: http://logs_service:5003/log
    healthCheckPath: /healthz

  - name: artigow-db
    type: database
    databaseName: artigow_db
    plan: starter
    postgresVersion: 15
    disk:
      sizeGB: 10 # Tamaño del disco para datos persistentes

  - name: artigow-logs
    type: web
    env: production
    buildCommand: pipenv install --deploy
    startCommand: python -m logs_service.run
    plan: free
    region: frankfurt
    envVars:
      - key: DATABASE_URL
        value: postgresql://user:password@db_service:5432/artigow_logs_db
